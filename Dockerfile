# 1. Node.js 18 공식 이미지 사용
FROM node:18-slim AS build

# 2. 환경변수 설정
ARG REACT_APP_API_BASE_URL
ARG REACT_APP_BACKEND_URL
ARG REACT_APP_FIREBASE_API_KEY
ARG REACT_APP_FIREBASE_AUTH_DOMAIN
ARG REACT_APP_FIREBASE_PROJECT_ID
ARG REACT_APP_FIREBASE_STORAGE_BUCKET
ARG REACT_APP_FIREBASE_MESSAGING_SENDER_ID
ARG REACT_APP_FIREBASE_APP_ID
ARG REACT_APP_GITHUB_CLIENT_ID
ARG REACT_APP_GITHUB_CLIENT_SECRET

ENV REACT_APP_API_BASE_URL=$REACT_APP_API_BASE_URL
ENV REACT_APP_BACKEND_URL=$REACT_APP_BACKEND_URL
ENV REACT_APP_FIREBASE_API_KEY=$REACT_APP_FIREBASE_API_KEY
ENV REACT_APP_FIREBASE_AUTH_DOMAIN=$REACT_APP_FIREBASE_AUTH_DOMAIN
ENV REACT_APP_FIREBASE_PROJECT_ID=$REACT_APP_FIREBASE_PROJECT_ID
ENV REACT_APP_FIREBASE_STORAGE_BUCKET=$REACT_APP_FIREBASE_STORAGE_BUCKET
ENV REACT_APP_FIREBASE_MESSAGING_SENDER_ID=$REACT_APP_FIREBASE_MESSAGING_SENDER_ID
ENV REACT_APP_FIREBASE_APP_ID=$REACT_APP_FIREBASE_APP_ID
ENV REACT_APP_GITHUB_CLIENT_ID=$REACT_APP_GITHUB_CLIENT_ID
ENV REACT_APP_GITHUB_CLIENT_SECRET=$REACT_APP_GITHUB_CLIENT_SECRET

# 3. 작업 디렉토리 설정
WORKDIR /app

# 4. 패키지 파일 복사
COPY package*.json ./

# 5. 의존성 설치
RUN npm install --legacy-peer-deps

# 6. 소스 코드 복사
COPY . .

# 7. Babel 설정 파일 복사
COPY .babelrc .babelrc

# 8. OpenSSL Legacy Provider 활성화 및 React 애플리케이션 빌드
ENV NODE_OPTIONS=--openssl-legacy-provider
RUN npm run build

# 9. 'serve' 패키지 전역 설치
RUN npm install -g serve

# 10. 실행 단계: 빌드된 파일 제공
CMD ["serve", "-s", "build", "-l", "3030"]

# 11. 컨테이너 외부에 노출할 포트 설정
EXPOSE 3030
